---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mariadb-restore
  namespace: mariadb
spec:
  schedule: "@yearly" 
  suspend: true
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            mariadb-client: 'true'
        spec:
          dnsPolicy: ClusterFirstWithHostNet
          automountServiceAccountToken: false
          containers:
          - name: mariadb-backup
            image: mariadb:11.4.3
            imagePullPolicy: IfNotPresent
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              runAsNonRoot: true
              runAsUser: 1001
              runAsGroup: 100
              seccompProfile:
                type: RuntimeDefault
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: 50m
                memory: 700Mi
              limits:
                cpu: 1500m
                memory: 1400Mi
            env: 
            - name: MARIADB_ROOT_PASSWORD 
              valueFrom: 
                secretKeyRef: 
                  name: mariadb-passwords
                  key: mariadb-root-password
            - name: MARIADB_REPLICATOR_PASSWORD 
              valueFrom: 
                secretKeyRef: 
                  name: mariadb-passwords
                  key: mariadb-replicator-password
            command: 
            - /bin/sh
            - -c
            - echo "$(date +%F_%T) Dropping existing MariaDB databases..." &&
              DB_LIST=$(tr '\n' ' ' < /app/mariadb-databases.txt) &&
              SQL_CMD="STOP SLAVE; "; for DB in $DB_LIST; do SQL_CMD="$SQL_CMD DROP DATABASE IF EXISTS \`$DB\`;" done &&
              mariadb -h mariadb -u root -p$MARIADB_ROOT_PASSWORD -e "$SQL_CMD" &&
              newest_sql_file=$(ls -t /app/*.sql 2>/dev/null | head -n 1) &&
              echo "$(date +%F_%T) Restoring MariaDB databases from $newest_sql_file..." && 
              mariadb -h mariadb -u root -p$MARIADB_ROOT_PASSWORD < $newest_sql_file && 
              echo "$(date +%F_%T) MariaDB databases have been restored" &&
              echo "$(date +%F_%T) Restoring users and procedures..." &&
              mariadb -h mariadb -u root -p$MARIADB_ROOT_PASSWORD < /app/procedures.sql &&
              mariadb -h mariadb -u root -p$MARIADB_ROOT_PASSWORD < /app/mariadb-users.sql &&
              echo "$(date +%F_%T) Enabling replication..." &&
              GTID_POS=$(cat /app/mariadb-gtid-pos.txt) &&
              mariadb -h mariadb -u root -p$MARIADB_ROOT_PASSWORD -e "set global gtid_slave_pos='$GTID_POS'; change master to master_host='cloud-egress', master_user='replicator', master_password='$MARIADB_REPLICATOR_PASSWORD', master_port=3306, master_connect_retry=10, master_use_gtid=slave_pos; start slave;" &&
              echo "$(date +%F_%T) Finished!"
            volumeMounts:
            - name: data
              mountPath: /app
          restartPolicy: Never
          volumes:
          - name: data
            persistentVolumeClaim:
              claimName: nfs-mariadb-backup

