driver:
  kind: modern-bpf
collectors:
  enabled: true
  docker:
    enabled: false
  crio:
    enabled: false
  containerd:
    enabled: true
    socket: /run/k3s/containerd/containerd.sock
falco:
  load_plugins:
  - k8saudit
  
customRules:
  custom-rules.yaml: |-
    - rule: Contact K8S API Server From Container
      exceptions:
      - name: allowed_to_contact_api_server
        fields: [k8s.ns.name, container.name, proc.name] 
        comps: [=,=,=]
        values:
        - [argocd, application-controller, argocd-applicat]
        - [argocd, applicationset-controller, argocd-applicat]
        - [argocd, notifications-controller, argocd-notifica]
        - [argocd, repo-server, git]
        - [argocd, server, argocd-server]
        - [cert-manager, cert-manager-webhook, webhook]
        - [cloudflare, cloudflare-tunnel, cloudflared]
        - [external-dns, external-dns, external-dns]
        - [headlamp, headlamp, headlamp-server]
        - [intel-gpu, manager, intel_deviceplu]
        - [longhorn, csi-attacher, csi-attacher]
        - [longhorn, csi-provisioner, csi-provisioner]
        - [longhorn, csi-resizer, csi-resizer]
        - [longhorn, csi-snapshotter, csi-snapshotter]
        - [longhorn, longhorn-admission-webhook, longhorn-manage]
        - [longhorn, longhorn-manager, longhorn-manage]
        - [longhorn, nightly-backups, longhorn-manage]
        - [longhorn, 24-hour-snapshots, longhorn-manage]
        - [media-tools, backup-media-apps, kubectl]
        - [metallb-system, speaker, speaker]
        - [monitoring, grafana-sc-dashboard, python]
        - [monitoring, grafana-sc-datasources, python]
        - [monitoring, prometheus, prometheus]
        - [netdata, netdata, curl]
        - [netdata, sd, agent_sd]
        - [portainer, portainer, portainer]
        - [system-upgrade, system-upgrade-controller, system-upgrade-]
        - [tailscale, operator, operator]
        - [tailscale, tailscale, tailscaled]
      append: true

    - rule: Drop and execute new binary in container
      exceptions:
      - name: allowed_to_execute_new_binary
        fields: [k8s.ns.name, container.name, proc.name] 
        comps: [=,=,in]
        values:
        - [media-tools, plex, [CrashUploader, Plex Media Fing, Plex Media Scan, Plex Media Serv, Plex Script Hos, Plex Transcoder, Plex Tuner Serv]]
        - [pihole, pihole, [pihole-FTL]]
      append: true

    - rule: Clear Log Activities
      exceptions:
      - name: allowed_to_clear
        fields: [container.name, proc.pname, proc.name] 
        comps: [=,=,=]
        values:
        - [host, k3s-agent, containerd]
        - [host, k3s-server, containerd]
        - [engine-manager, longhorn-instan, tee]
      append: true

    - rule: Redirect STDOUT/STDIN to Network Connection in Container
      exceptions:
      - name: allowed_to_do_stdout_stdin
        fields: [k8s.ns.name, container.name, proc.name] 
        comps: [=,=,in]
        values:
        - [argocd, repo-server, [argocd-repo-ser, git]]
        - [gitea, gitea, [git]]
        - [homeassist, homeassist, [busybox, git, ping, python3]]
        - [longhorn, longhorn-manager, [longhorn, longhorn-manage]]
        - [longhorn, engine-manager, [longhorn]]
      append: true

    - rule: Run shell untrusted
      exceptions:
      - name: allowed_shell
        fields: [k8s.ns.name, container.name, proc.pname] 
        comps: [=,=,in]
        values:
        - [mariadb, mariadb-galera, [mysqld]]
        - [pihole, pihole, [php-cgi, runuser, sudo]]
      append: true

falcosidekick:
  enabled: true

  webui:
    enabled: true
    existingSecret: sidekick-creds

    redis:
      enabled: true